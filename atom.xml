<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[三月不知]]></title>
  <subtitle><![CDATA[我们都是星尘！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.sybzrw.com/"/>
  <updated>2017-03-07T12:06:52.000Z</updated>
  <id>http://www.sybzrw.com/</id>
  
  <author>
    <name><![CDATA[wang xin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[如何在iOS App的图标上显示版本信息]]></title>
    <link href="http://www.sybzrw.com/2017/02/21/%E5%A6%82%E4%BD%95%E5%9C%A8iOS-App%E7%9A%84%E5%9B%BE%E6%A0%87%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.sybzrw.com/2017/02/21/如何在iOS-App的图标上显示版本信息/</id>
    <published>2017-02-21T13:13:32.000Z</published>
    <updated>2017-03-07T12:06:52.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic0.jpg" alt=""></p>
<h2 id="u4F5C_u7528"><a href="#u4F5C_u7528" class="headerlink" title="作用"></a>作用</h2><p>在iOS App的图标上显示版本信息，帮助测试人员在测试多版本的时候直接从桌面icon上看到当前的版本，无需再到App内或者TestFlight中去看测试机使用的哪个版本。可以极大的提升效率，不仅限于版本信息，同时还可以显示git分支，commit id等。<strong><em>对于开发者来说，理解这一过程可以加深对Xcode编译过程的理解，同时也可以学到一些shell脚本的知识。</em></strong></p>
<h2 id="u6765_u6E90"><a href="#u6765_u6E90" class="headerlink" title="来源"></a>来源</h2><p>最早想到方法的人应该是国外的一个大神，文章链接在这<a href="http://merowing.info/2013/03/overlaying-application-version-on-top-of-your-icon/" target="_blank" rel="external">Overlaying application version on top of your icon</a><br>这篇blog的最后有个demo，它的功能非常强大，只要你的电脑装好工具可以直接应用在几乎任何iOS项目中。<br>Demo<a href="https://github.com/krzysztofzablocki/IconOverlaying" target="_blank" rel="external">下载地址</a><br>本文是自己对这篇blog的理解和分析  </p>
<h2 id="u6548_u679C"><a href="#u6548_u679C" class="headerlink" title="效果"></a>效果</h2><p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic_1.PNG" alt=""></p>
<h2 id="u5B9E_u73B0"><a href="#u5B9E_u73B0" class="headerlink" title="实现"></a><a name="markdown-How-it-work"></a>实现</h2><p>对照效果图我们来大致猜测一下这个的实现流程。首先是怎样取到你想要展示的信息(例如Vesion，bulid版本),再就是是如何把文字写到图片上，然后把带有信息的图片与app Icon进行合成。最后在Xcode编译过程中实现图片替换（这里的实现方式是，在将上述过程写成一个shell脚本，在Xcode的Build Phases选项中加入这一脚本）：</p>
<h3 id="1-__u4F7F_u7528PlistBuddy_u5DE5_u5177_uFF0C_u83B7_u53D6version_2Cbuild_u4FE1_u606F"><a href="#1-__u4F7F_u7528PlistBuddy_u5DE5_u5177_uFF0C_u83B7_u53D6version_2Cbuild_u4FE1_u606F" class="headerlink" title="1. 使用PlistBuddy工具，获取version,build信息"></a>1. 使用<a href="http://www.jianshu.com/p/2167f755c47e" target="_blank" rel="external">PlistBuddy</a>工具，获取version,build信息</h3><p>.plist文件是Mac种非常普遍的一种文件格式，类似xml，通过键值对的方式来进行一些配置。而PlistBuddy则是Mac自带的专门解析plist的小工具，由于PlistBuddy并不在Mac默认的Path里，所以我们得通过绝对路径来引用这个工具,在终端（Terminal）输入以下命令可查看帮助  </p>
<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">➜  ✗  /usr/libexec/PlistBuddy <span class="comment">--help</span></div></pre></td></tr></table></figure>
<p>提取App的Info.plist中的Version信息可以使用以下命令   </p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">➜  ✗ /usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleShortVersionString"</span> <span class="meta">Info</span>.plist路径</div></pre></td></tr></table></figure>
<p>提取App的Info.plist中的build信息可以使用以下命令  </p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">➜  ✗ /usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleVersion"</span> <span class="meta">Info</span>.plist路径</div></pre></td></tr></table></figure>
<h3 id="2-_git_u547D_u4EE4_u83B7_u53D6_u5206_u652F_u4FE1_u606F_u548Ccommit_id"><a href="#2-_git_u547D_u4EE4_u83B7_u53D6_u5206_u652F_u4FE1_u606F_u548Ccommit_id" class="headerlink" title="2. git命令获取分支信息和commit id"></a>2. git命令获取分支信息和commit id</h3><p>获取分支  </p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">rev</span>-<span class="built_in">parse</span> --abbrev-ref HEAD</div></pre></td></tr></table></figure>
<p>获取commit id  </p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">rev</span>-<span class="built_in">parse</span> --short HEAD</div></pre></td></tr></table></figure>
<h3 id="3-_u4F7F_u7528ImageMagick_u5C06_u7248_u672C_u4FE1_u606F_u586B_u5145_u5230_u56FE_u6807_u4E0A"><a href="#3-_u4F7F_u7528ImageMagick_u5C06_u7248_u672C_u4FE1_u606F_u586B_u5145_u5230_u56FE_u6807_u4E0A" class="headerlink" title="3.使用ImageMagick将版本信息填充到图标上"></a>3.使用<a href="https://www.imagemagick.org/script/index.php" target="_blank" rel="external">ImageMagick</a>将版本信息填充到图标上</h3><p>这里实际上需要安装2个工具：ImageMagick和ghostscript。最好是先安装ghostscript，因为ImageMagick要用到它，有点类似CocoaPods的依赖关系（s.dependency)，但是这里不会自动安装，需要我们手动操作，使用<a href="http://brew.sh/" target="_blank" rel="external">Homebrew</a>运行以下两个命令：</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">➜  ✗ <span class="keyword">brew </span><span class="keyword">install </span>ghostscript </div><div class="line">➜  ✗ <span class="keyword">brew </span><span class="keyword">install </span>imagemagick</div></pre></td></tr></table></figure>
<p>安装好后，通过ImageMagicK的convert功能把文字写到图片上,示例：在Icon-76.png上，创建一个背景色为蓝色，透明度为80%的颜色’#0098’，这种颜色表示法有点像我们平常见到的rgba色值，<strong><em>不过rgb取值不再是0~255，而是0~9，</em></strong>我们可以根据需要设置不同的背景色。接着指定大小，长为76，高为30的矩形。然后用白色字体把“NextStep”居中写到矩形中。这里字体颜色也可以用前面那种颜色表示，例如想让字体为红色可以将‘white’替换成’#9008’。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">convert -<span class="attribute">background</span> <span class="string">'#0098'</span> -fill white -gravity center -size <span class="number">76</span>x30  \  </div><div class="line"><span class="selector-tag">caption</span>:<span class="string">"NextStep"</span>   ./Icon-<span class="number">76</span><span class="selector-class">.png</span>  \</div><div class="line">+swap -gravity south -composite ./convert.png</div></pre></td></tr></table></figure>
<p>动图中可以看到文字的背景由蓝色变成了红色<br><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_gif0.gif" alt=""></p>
<h3 id="4-_u5B9E_u73B0_u66FF_u6362icon_u7684_u529F_u80FD"><a href="#4-_u5B9E_u73B0_u66FF_u6362icon_u7684_u529F_u80FD" class="headerlink" title="4.实现替换icon的功能"></a>4.实现替换icon的功能</h3><p>上面只是将用到的工具列出来，但离实现我们的需求还有很大的距离，真正有趣的东西是<a href="https://github.com/krzysztofzablocki/IconOverlaying" target="_blank" rel="external">源码</a>中的<a href="https://github.com/krzysztofzablocki/IconOverlaying/blob/master/Scripts/iconVersioning.sh" target="_blank" rel="external">iconVersioning.sh</a>文件，我把它粘贴在文章末尾。他的工作就是把上面的各种命令进行组合，虽然里面的内容很多，但是如果分成模块来解读将很容易理解，我把它分成4个模块，如下：   </p>
<ul>
<li><font color="#FF00FF">A，1~56行：</font>读取版本，git信息，第56行，最终读取的信息会保存在caption中，第19~29行作用是提示怎样安装必须的工具。</li>
<li><font color="#FF00FF">B，58行：</font>函数abspath（这个实在太长了，所以下面贴的源文件删了函数体），作用是显示一个文件的绝对路径。仅仅是显示，对脚本功能其实没有影响，可以通过注释该方法的调用（第66，67行）进行验证，注释这两行后不影响脚本执行。</li>
<li><font color="#FF00FF">C，60~140行：</font>函数processIcon，他的功能是创建带有额外信息的图片，不是在原图上直接加，而是有几个过程：复制（第95行），文件重命名（第115，119行），添加版本信息（第147行）。因为Xcode编译过后的图片实际是被压缩了，使用此命令xcrun -sdk iphoneos pngcrush -revert-iphone-optimizations -q会将图片转成普通的格式。</li>
<li><font color="#FF00FF">D，142~161行：</font>找到所有需要替换的图片，循环调用函数processIcon。<strong><em>这里才是真正的入口。前面只是在定义变量和函数，真正的调用发生在这里。</em></strong>  他做的的事情就是读取一个info.plist文件，文件的路径是这${CONFIGURATION_BUILD_DIR}/${INFOPLIST_PATH}实际位置如下图：  </li>
</ul>
<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic3.png" alt=""></p>
<p>显示包内容，就可以看到info.plist文件  </p>
<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic4.png" alt="">  </p>
<p>info.plist的具体内容如下  </p>
<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic5.png" alt=""></p>
<p>现在再看第142，147行就可以轻松理解了，读取路径是${CONFIGURATION_BUILD_DIR}/${INFOPLIST_PATH}的文件，找到CFBundleIcons~ipad:CFBundlePrimaryIcon:CFBundleIconFiles这个key对应的数据，是一个保存图片名称的数组。把图片名当成参数传入函数processIcon，实现icon的更换。CONFIGURATION_BUILD_DIR代表环境变量，可以到Apple的<a href="https://developer.apple.com/legacy/library/documentation/DeveloperTools/Reference/XcodeBuildSettingRef/1-Build_Setting_Reference/build_setting_ref.html" target="_blank" rel="external">开发者网站</a>上查到所有这种类型变量的含义。</p>
<h3 id="5-_u5728Xcode_u7F16_u8BD1_u7684_u8FC7_u7A0B_u4E2D_u8FD0_u884C_u811A_u672C_uFF0C_u67E5_u770B_u7F16_u8BD1log"><a href="#5-_u5728Xcode_u7F16_u8BD1_u7684_u8FC7_u7A0B_u4E2D_u8FD0_u884C_u811A_u672C_uFF0C_u67E5_u770B_u7F16_u8BD1log" class="headerlink" title="5.在Xcode编译的过程中运行脚本，查看编译log"></a>5.在Xcode编译的过程中运行脚本，查看编译log</h3><p>Xcode的Build Phases选项中新增Run Script，添加上述.sh文件到选项中。查看脚本的log信息可以在Xcode进行查看。实际就是脚本中的echo命令输出的内容</p>
<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic6.png" alt=""></p>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><p>这里面其实涉及了非常多的shell脚本方面的知识，里面的命令行程序一共十多种，想要真正弄懂全部过程要对这些命令有一定程度的了解。例如“which”判断某个命令是否存在（第4行），“mv”重命名或者移动文件（第115行），“basename”命令用于去掉文件名的目录和后缀（第89行）。如果遇到不懂的命令有一个“man”命令可以辅助我们理解，例如在终端中输入“man basename”可以看到命令行的使用文档，另外是shell编程内的流程控制语法if-then-fi，用反引号``表示执行命令等等，当我们遇到问题时需要借助各种工具去解决问题，当别人已经有了解决方法时，我们也应该中学习经验，了解用到的工具，亲手去调试，而不只是看看，最好自己再写一遍。如果你把源代码的中的.sh文件删了，自己从头开始创建的话，必须使用到一个特殊的命令，有兴趣的可以去研究下！</p>
<p>我自己写了一个<a href="https://github.com/sybz/Demo/tree/master/AppIconInfo" target="_blank" rel="external">demo</a>修改了一下脚本中读取plist的方法，原始代码应用到纯iPhone的APP会有问题。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="built_in">export</span> PATH=/opt/<span class="built_in">local</span>/bin/:/opt/<span class="built_in">local</span>/sbin:<span class="variable">$PATH</span>:/usr/<span class="built_in">local</span>/bin:</div><div class="line"></div><div class="line">convertPath=`<span class="built_in">which</span> convert`</div><div class="line">gsPath=`<span class="built_in">which</span> gs`</div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ ! <span class="_">-f</span> <span class="variable">$&#123;convertPath&#125;</span> || -z <span class="variable">$&#123;convertPath&#125;</span> ]]; <span class="keyword">then</span></div><div class="line">  convertValidation=<span class="literal">true</span>;</div><div class="line"><span class="keyword">else</span></div><div class="line">  convertValidation=<span class="literal">false</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ ! <span class="_">-f</span> <span class="variable">$&#123;gsPath&#125;</span> || -z <span class="variable">$&#123;gsPath&#125;</span> ]]; <span class="keyword">then</span></div><div class="line">  gsValidation=<span class="literal">true</span>;</div><div class="line"><span class="keyword">else</span></div><div class="line">  gsValidation=<span class="literal">false</span>;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ <span class="string">"<span class="variable">$convertValidation</span>"</span> = <span class="literal">true</span> || <span class="string">"<span class="variable">$gsValidation</span>"</span> = <span class="literal">true</span> ]]; <span class="keyword">then</span></div><div class="line">  <span class="built_in">echo</span> <span class="string">"WARNING: Skipping Icon versioning, you need to install ImageMagick and ghostscript (fonts) first, you can use brew to simplify process:"</span></div><div class="line"></div><div class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$convertValidation</span>"</span> = <span class="literal">true</span> ]]; <span class="keyword">then</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"brew install imagemagick"</span></div><div class="line">  <span class="keyword">fi</span></div><div class="line">  <span class="keyword">if</span> [[ <span class="string">"<span class="variable">$gsValidation</span>"</span> = <span class="literal">true</span> ]]; <span class="keyword">then</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"brew install ghostscript"</span></div><div class="line">  <span class="keyword">fi</span></div><div class="line"><span class="built_in">exit</span> 0;</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">version=`/usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleShortVersionString"</span> <span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_PATH&#125;</span>"</span>`</div><div class="line">build_num=`/usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleVersion"</span> <span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_PATH&#125;</span>"</span>`</div><div class="line"></div><div class="line"><span class="comment"># Check if we are under a Git or Hg repo</span></div><div class="line"><span class="keyword">if</span> [ <span class="_">-d</span> .git ] || git rev-parse --git-dir &gt; /dev/null 2&gt;&amp;1; <span class="keyword">then</span></div><div class="line">    commit=`git rev-parse --short HEAD`</div><div class="line">    branch=`git rev-parse --abbrev-ref HEAD`</div><div class="line"><span class="keyword">else</span></div><div class="line">    commit=`hg identify -i`</div><div class="line">    branch=`hg identify -b`</div><div class="line"><span class="keyword">fi</span>;</div><div class="line"></div><div class="line"><span class="comment">#SRCROOT=..</span></div><div class="line"><span class="comment">#CONFIGURATION_BUILD_DIR=.</span></div><div class="line"><span class="comment">#UNLOCALIZED_RESOURCES_FOLDER_PATH=.</span></div><div class="line"></div><div class="line"><span class="comment">#commit="3783bab"</span></div><div class="line"><span class="comment">#branch="master"</span></div><div class="line"><span class="comment">#version="3.4"</span></div><div class="line"><span class="comment">#build_num="9999"</span></div><div class="line"></div><div class="line"><span class="built_in">shopt</span> <span class="_">-s</span> extglob</div><div class="line">build_num=<span class="string">"<span class="variable">$&#123;build_num##*( )&#125;</span>"</span></div><div class="line"><span class="built_in">shopt</span> -u extglob</div><div class="line">caption=<span class="string">"<span class="variable">$&#123;version&#125;</span> (<span class="variable">$build_num</span>)\n<span class="variable">$&#123;branch&#125;</span>\n<span class="variable">$&#123;commit&#125;</span>"</span></div><div class="line"><span class="built_in">echo</span> <span class="variable">$caption</span></div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">abspath</span></span>() &#123; &#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">processIcon</span></span>() &#123;</div><div class="line">    base_file=<span class="variable">$1</span></div><div class="line"></div><div class="line">    <span class="built_in">cd</span> <span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;UNLOCALIZED_RESOURCES_FOLDER_PATH&#125;</span>"</span></div><div class="line">    base_path=`find . -name <span class="variable">$&#123;base_file&#125;</span>`</div><div class="line"></div><div class="line">    real_path=$( abspath <span class="string">"<span class="variable">$&#123;base_path&#125;</span>"</span> )</div><div class="line">    <span class="built_in">echo</span> <span class="string">"base path <span class="variable">$&#123;real_path&#125;</span>"</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> [[ ! <span class="_">-f</span> <span class="variable">$&#123;base_path&#125;</span> || -z <span class="variable">$&#123;base_path&#125;</span> ]]; <span class="keyword">then</span></div><div class="line">      <span class="built_in">return</span>;</div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    <span class="comment"># <span class="doctag">TODO:</span> if they are the same we need to fix it by introducing temp</span></div><div class="line">    target_file=`basename <span class="variable">$base_path</span>`</div><div class="line">    target_path=<span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;UNLOCALIZED_RESOURCES_FOLDER_PATH&#125;</span>/<span class="variable">$&#123;target_file&#125;</span>"</span></div><div class="line"></div><div class="line">    base_tmp_normalizedFileName=<span class="string">"<span class="variable">$&#123;base_file%.*&#125;</span>-normalized.<span class="variable">$&#123;base_file##*.&#125;</span>"</span></div><div class="line">    base_tmp_path=`dirname <span class="variable">$base_path</span>`</div><div class="line">    base_tmp_normalizedFilePath=<span class="string">"<span class="variable">$&#123;base_tmp_path&#125;</span>/<span class="variable">$&#123;base_tmp_normalizedFileName&#125;</span>"</span></div><div class="line"></div><div class="line">    stored_original_file=<span class="string">"<span class="variable">$&#123;base_tmp_normalizedFilePath&#125;</span>-tmp"</span></div><div class="line">    <span class="keyword">if</span> [[ <span class="_">-f</span> <span class="variable">$&#123;stored_original_file&#125;</span> ]]; <span class="keyword">then</span></div><div class="line">      <span class="built_in">echo</span> <span class="string">"found previous file at path <span class="variable">$&#123;stored_original_file&#125;</span>, using it as base"</span></div><div class="line">      mv <span class="string">"<span class="variable">$&#123;stored_original_file&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;base_path&#125;</span>"</span></div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> [ <span class="variable">$CONFIGURATION</span> = <span class="string">"Release"</span> ]; <span class="keyword">then</span></div><div class="line">      cp <span class="string">"<span class="variable">$&#123;base_path&#125;</span>"</span> <span class="string">"<span class="variable">$target_path</span>"</span></div><div class="line">      <span class="built_in">return</span> 0;</div><div class="line">    <span class="keyword">fi</span></div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Reverting optimized PNG to normal"</span></div><div class="line">    <span class="comment"># Normalize</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"xcrun -sdk iphoneos pngcrush -revert-iphone-optimizations -q <span class="variable">$&#123;base_path&#125;</span> <span class="variable">$&#123;base_tmp_normalizedFilePath&#125;</span>"</span></div><div class="line">    xcrun -sdk iphoneos pngcrush -revert-iphone-optimizations -q <span class="string">"<span class="variable">$&#123;base_path&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;base_tmp_normalizedFilePath&#125;</span>"</span></div><div class="line"></div><div class="line">    <span class="comment"># move original pngcrush png to tmp file</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"moving pngcrushed png file at <span class="variable">$&#123;base_path&#125;</span> to <span class="variable">$&#123;stored_original_file&#125;</span>"</span></div><div class="line">    <span class="comment">#rm "$base_path"</span></div><div class="line">    mv <span class="string">"<span class="variable">$base_path</span>"</span> <span class="string">"<span class="variable">$&#123;stored_original_file&#125;</span>"</span></div><div class="line"></div><div class="line">    <span class="comment"># Rename normalized png's filename to original one</span></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Moving normalized png file to original one <span class="variable">$&#123;base_tmp_normalizedFilePath&#125;</span> to <span class="variable">$&#123;base_path&#125;</span>"</span></div><div class="line">    mv <span class="string">"<span class="variable">$&#123;base_tmp_normalizedFilePath&#125;</span>"</span> <span class="string">"<span class="variable">$&#123;base_path&#125;</span>"</span></div><div class="line"></div><div class="line">    width=`identify -format %w <span class="variable">$&#123;base_path&#125;</span>`</div><div class="line">    height=`identify -format %h <span class="variable">$&#123;base_path&#125;</span>`</div><div class="line">    band_height=$(((<span class="variable">$height</span> * 47) / 100))</div><div class="line">    band_position=$((<span class="variable">$height</span> - <span class="variable">$band_height</span>))</div><div class="line">    text_position=$((<span class="variable">$band_position</span> - 3))</div><div class="line">    point_size=$(((13 * <span class="variable">$width</span>) / 100))</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Image dimensions (<span class="variable">$width</span> x <span class="variable">$height</span>) - band height <span class="variable">$band_height</span> @ <span class="variable">$band_position</span> - point size <span class="variable">$point_size</span>"</span></div><div class="line"></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment"># blur band and text</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    convert <span class="variable">$&#123;base_path&#125;</span> -blur 10x8 /tmp/blurred.png</div><div class="line">    convert /tmp/blurred.png -gamma 0 -fill white -draw <span class="string">"rectangle 0,<span class="variable">$band_position</span>,<span class="variable">$width</span>,<span class="variable">$height</span>"</span> /tmp/mask.png</div><div class="line">    convert -size <span class="variable">$&#123;width&#125;</span>x<span class="variable">$&#123;band_height&#125;</span> xc:none -fill <span class="string">'rgba(0,0,0,0.2)'</span> -draw <span class="string">"rectangle 0,0,<span class="variable">$width</span>,<span class="variable">$band_height</span>"</span> /tmp/labels-base.png</div><div class="line">    convert -background none -size <span class="variable">$&#123;width&#125;</span>x<span class="variable">$&#123;band_height&#125;</span> -pointsize <span class="variable">$point_size</span> -fill white -gravity center -gravity South caption:<span class="string">"<span class="variable">$caption</span>"</span> /tmp/labels.png</div><div class="line"></div><div class="line">    convert <span class="variable">$&#123;base_path&#125;</span> /tmp/blurred.png /tmp/mask.png -composite /tmp/temp.png</div><div class="line"></div><div class="line">    rm /tmp/blurred.png</div><div class="line">    rm /tmp/mask.png</div><div class="line"></div><div class="line">    <span class="comment">#</span></div><div class="line">    <span class="comment"># compose final image</span></div><div class="line">    <span class="comment">#</span></div><div class="line">    filename=New<span class="variable">$&#123;base_file&#125;</span></div><div class="line">    convert /tmp/temp.png /tmp/labels-base.png -geometry +0+<span class="variable">$band_position</span> -composite /tmp/labels.png -geometry +0+<span class="variable">$text_position</span> -geometry +<span class="variable">$&#123;w&#125;</span>-<span class="variable">$&#123;h&#125;</span> -composite <span class="string">"<span class="variable">$&#123;target_path&#125;</span>"</span></div><div class="line"></div><div class="line">    <span class="comment"># clean up</span></div><div class="line">    rm /tmp/temp.png</div><div class="line">    rm /tmp/labels-base.png</div><div class="line">    rm /tmp/labels.png</div><div class="line"></div><div class="line">    <span class="built_in">echo</span> <span class="string">"Overlayed <span class="variable">$&#123;target_path&#125;</span>"</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">icon_count=`/usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleIcons~ipad:CFBundlePrimaryIcon:CFBundleIconFiles"</span> <span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_PATH&#125;</span>"</span> | wc <span class="_">-l</span>`</div><div class="line">last_icon_index=$((<span class="variable">$&#123;icon_count&#125;</span> - 2))</div><div class="line"></div><div class="line">i=0</div><div class="line"><span class="keyword">while</span> [  <span class="variable">$i</span> <span class="_">-lt</span> <span class="variable">$last_icon_index</span> ]; <span class="keyword">do</span></div><div class="line">  icon=`/usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleIcons~ipad:CFBundlePrimaryIcon:CFBundleIconFiles:<span class="variable">$i</span>"</span> <span class="string">"<span class="variable">$&#123;CONFIGURATION_BUILD_DIR&#125;</span>/<span class="variable">$&#123;INFOPLIST_PATH&#125;</span>"</span>`</div><div class="line"></div><div class="line">  <span class="keyword">if</span> [[ <span class="variable">$icon</span> == *.png ]] || [[ <span class="variable">$icon</span> == *.PNG ]]</div><div class="line">  <span class="keyword">then</span></div><div class="line">    processIcon <span class="variable">$icon</span></div><div class="line">  <span class="keyword">else</span></div><div class="line">    processIcon <span class="string">"<span class="variable">$&#123;icon&#125;</span>.png"</span></div><div class="line">    processIcon <span class="string">"<span class="variable">$&#123;icon&#125;</span>@2x.png"</span></div><div class="line">    processIcon <span class="string">"<span class="variable">$&#123;icon&#125;</span>@3x.png"</span></div><div class="line"></div><div class="line">    processIcon <span class="string">"<span class="variable">$&#123;icon&#125;</span>~ipad.png"</span></div><div class="line">    processIcon <span class="string">"<span class="variable">$&#123;icon&#125;</span>@2x~ipad.png"</span></div><div class="line">  <span class="keyword">fi</span></div><div class="line">  <span class="built_in">let</span> i=i+1</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line"><span class="comment"># Workaround to fix issue#16 to use wildcard * to actually find the file</span></div><div class="line"><span class="comment"># Only 72x72 and 76x76 that we need for ipad app icons</span></div><div class="line"><span class="comment">#processIcon "AppIcon72x72~ipad*"</span></div><div class="line"><span class="comment">#processIcon "AppIcon72x72@2x~ipad*"</span></div><div class="line"><span class="comment">#processIcon "AppIcon76x76~ipad*"</span></div><div class="line"><span class="comment">#processIcon "AppIcon76x76@2x~ipad*"</span></div></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/blog0_pic0.jpg" alt=""></p>
<h2 id="u4F5C_u7528"><a href="#u4F5C_u7528" class="headerlink]]>
    </summary>
    
      <category term="iOS" scheme="http://www.sybzrw.com/tags/iOS/"/>
    
  </entry>
  
</feed>
