<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[三月不知]]></title>
  <subtitle><![CDATA[我们都是星尘！]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.sybzrw.com/"/>
  <updated>2017-02-21T16:54:04.000Z</updated>
  <id>http://www.sybzrw.com/</id>
  
  <author>
    <name><![CDATA[wang xin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[如何在iOS App的图标上显示版本信息]]></title>
    <link href="http://www.sybzrw.com/2017/02/21/%E5%A6%82%E4%BD%95%E5%9C%A8iOS-App%E7%9A%84%E5%9B%BE%E6%A0%87%E4%B8%8A%E6%98%BE%E7%A4%BA%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.sybzrw.com/2017/02/21/如何在iOS-App的图标上显示版本信息/</id>
    <published>2017-02-21T13:13:32.000Z</published>
    <updated>2017-02-21T16:54:04.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xtbg5.com2.z0.glb.clouddn.com/backlight%20shooting_0_small.jpg" alt=""></p>
<h2 id="u4F5C_u7528"><a href="#u4F5C_u7528" class="headerlink" title="作用"></a>作用</h2><p>在iOS App的图标上显示版本信息，测试人员在测试多版本的时候，可以直接从桌面icon上看到当前测试的版本，无需再到App内或者TestFlight中去看测试机使用的哪个版本，可以极大的提升效率。不仅限于版本信息，同时还可以显示git分支，commit id等。<strong>对于开发者来说，理解这一过程可以加深对Xcode编译过程的理解，同时也可以学到一些shell的知识。</strong></p>
<h2 id="u6765_u6E90"><a href="#u6765_u6E90" class="headerlink" title="来源"></a>来源</h2><p>最早想到方法的人应该是国外的一个大神，文章链接在这<a href="http://merowing.info/2013/03/overlaying-application-version-on-top-of-your-icon/" target="_blank" rel="external">Overlaying application version on top of your icon</a><br>同时作者给出了Demo<a href="https://github.com/krzysztofzablocki/IconOverlaying" target="_blank" rel="external">下载地址</a><br>本文大部分是参照这篇bolg来写的，加上一些自己的理解以及对源代码中脚本的分析</p>
<h2 id="u6548_u679C"><a href="#u6548_u679C" class="headerlink" title="效果"></a>效果</h2><p><img src="http://7xtbg5.com1.z0.glb.clouddn.com/IMG_0586.PNG" alt=""></p>
<h2 id="u5B9E_u73B0"><a href="#u5B9E_u73B0" class="headerlink" title="实现"></a>实现</h2><p>对一个没有接触过这方面技术的人来说，对照效果图我们来大致猜测一下这个的实现流程。首先是怎样取到你想要展示的信息(例如Vesion，bulid版本),然后就是是如何把文字写到图片上，最后是把带有信息的图片与app Icon进行合成。这几个过程缺一不可，以下内容将对这些技术进行讲解。  </p>
<h3 id="1-__u4F7F_u7528PlistBuddy_u5DE5_u5177_uFF0C_u83B7_u53D6version_2Cbuild_u4FE1_u606F"><a href="#1-__u4F7F_u7528PlistBuddy_u5DE5_u5177_uFF0C_u83B7_u53D6version_2Cbuild_u4FE1_u606F" class="headerlink" title="1. 使用PlistBuddy工具，获取version,build信息"></a>1. 使用<a href="http://www.jianshu.com/p/2167f755c47e" target="_blank" rel="external">PlistBuddy</a>工具，获取version,build信息</h3><p>.plist文件是Mac种非常普遍的一种文件格式，类似xml，通过键值对的方式来进行一些配置。而PlistBuddy则是Mac自带的专门解析plist的小工具，由于PlistBuddy并不在Mac默认的Path里，所以我们得通过绝对路径来引用这个工具,在终端（Terminal）输入以下命令可查看帮助  </p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ✗  /usr/libexec/PlistBuddy <span class="comment">--help</span></span><br></pre></td></tr></table></figure>
<p>提取App的Info.plist中的Version信息可以使用以下命令   </p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ✗ /usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleShortVersionString"</span> <span class="preprocessor">Info</span>.plist路径</span><br></pre></td></tr></table></figure>
<p>提取App的Info.plist中的build信息可以使用以下命令  </p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">➜  ✗ /usr/libexec/PlistBuddy -c <span class="string">"Print CFBundleVersion"</span> <span class="preprocessor">Info</span>.plist路径</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xtbg5.com2.z0.glb.clouddn.com/backlight%20shooting_0_small.jpg" alt=""></p>
<h2 id="u4F5C_u7528"><a href="#u4F5C_u7528"]]>
    </summary>
    
      <category term="iOS" scheme="http://www.sybzrw.com/tags/iOS/"/>
    
  </entry>
  
</feed>
